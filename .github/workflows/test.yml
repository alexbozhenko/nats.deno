name: NATS.deno

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:
    branches: [master]

jobs:
  test:
    name: ${{ matrix.config.kind }} ${{ matrix.config.os }}
    runs-on: ubuntu-latest-4-cores
    environment: CI
    strategy:
      matrix:
        deno-version: [1.46.3]

    steps:
      - name: Git Checkout Deno Module
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Use Deno Version ${{ matrix.deno-version }}
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Install nats-server
        uses: aricart/install-binary@v1.0.0
        with:
          repo: nats-io/nats-server
          name: nats-server
          cache: true

      - name: Lint Deno Module
        run: deno fmt --check --ignore=docs/

      - name: Test Deno Module
        env:
          TMPDIR: ${{ runner.temp }}
          CI: true
          NGS_CI_USER: ${{ secrets.NGS_CI_USER }}
        run: |
          deno test --allow-all --unstable --parallel --fail-fast --coverage=./cov tests/ jetstream/tests 
          deno test --allow-all --unstable --parallel --fail-fast --unsafely-ignore-certificate-errors --coverage=./cov unsafe_tests/ 

      - name: Build nats.js
        run: deno bundle --unstable src/connect.ts nats.js

      - name: Generate lcov
        run: deno coverage --unstable --lcov ./cov > cov.lcov

      - name: Upload coverage
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: ./cov.lcov

      - name: Release
        uses: softprops/action-gh-release@v1
        if: |
          startsWith(github.ref, 'refs/tags/') &&
          !startsWith(github.ref, 'refs/tags/std/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            nats.js
          draft: true
